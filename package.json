{
  "name": "bones",
  "version": "1.0.0",
  "private": true,
  "description": "Minimal front end boilerplate and framework.",
  "author": {
    "name": "thezimmee",
    "email": "thezimmee@gmail.com",
    "url": "https://github.com/thezimmee/bones"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/thezimmee/bones/issues"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "preparecommitmsg": "echo 'git hook: prepare commit message'",
    "preparecommitmsg": "echo 'git hook: commit message'",
    "precommit": "echo 'git hook: precommit'",
    "prepush": "echo 'git hook: prepush'",
    "postcommit": "echo 'git hook: post commit'",
    "prebuild": "echo '\nStarting a new build...'",
    "build": "npm run build:pug && npm run build:sass && npm run build:js",
    "postbuild": "echo 'Build complete.\n' && npm run watch",
    "build:prod": "npm run build:pug & npm run build:prod:sass & npm run build:prod:js",
    "serve": "browser-sync start --config bs-config.js",
    "watch": "node ./lib/events.js & echo 'Watching all files...' & npm run watch:pug & npm run watch:data & npm run watch:sass & npm run watch:js & npm run watch:js & npm run watch:htmllint & npm run serve",
    "pug": "node lib/pug.js",
    "build:pug": "npm run pug -- $(find ./src -name '*.html.pug') --type=build",
    "build:sass": "node-sass ./src/app.scss --output-style=expanded --indent-type=tab --indent-width=1 --source-map=true --output=build/ --precision=5",
    "build:prod:sass": "node-sass ./src/app.scss --precision=5 | csso --output ./build/app.css",
    "postbuild:prod:sass": "postcss ./build/app.css --output ./build/app.css --use autoprefixer --map ./build/app.css.map",
    "build:stylus": "stylus ./src/app.styl --out ./build/app.css --compress",
    "postbuild:stylus": "postcss ./build/app.css --output ./build/app.css --use autoprefixer --map ./build/app.css.map",
    "build:js": "browserify ./src/app.js --debug | exorcist ./build/app.js.map > ./build/app.js -v",
    "postbuild:js": "echo 'Saved build/app.js.'",
    "build:prod:js": "browserify ./src/app.js --outfile 'uglifyjs -mc > ./build/app.js'",
    "lint": "eslint ./src/**/*.js & stylelint ./src/**/*.scss & htmlhint ./build/*.html",
    "watch:pug": "chokidar './src/**/*.html.pug' -c 'npm run pug -- {path} --changed={path}'",
    "watch:data": "chokidar 'archie.config.js' 'src/**/*.data.js' 'src/**/_*.pug' -c 'npm run pug -- src/**/*.pug --type=build'",
    "watch:sass": "chokidar './src/**/*.scss' -c 'npm run build:sass & stylelint {path}'",
    "watch:stylus": "chokidar './src/**/*.styl' -c 'npm run build:stylus & stylelint {path}'",
    "watch:js": "watchify ./src/app.js --debug --outfile 'exorcist ./build/app.js.map > ./build/app.js' & eslint {path}",
    "watch:htmllint": "chokidar './build/**/*.html' -c 'htmlhint {path}'",
    "old:pug": "pug --obj ./archie.config.js --out build --basedir ./src",
    "old:rename": "find . -name '*.html.html' -exec bash -c 'mv $0 ${0%.html.html}.html' {} \\;",
    "oldest:rename": "for file in build/**/*.html.html; do mv \"$file\" \"${file%.html.html}.html\" && echo '  renamed to '\"${file%.html.html}.html\"; done; echo ''"
  },
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {
    "angular": "^1.6.4",
    "autoprefixer": "^6.7.7",
    "browserify": "^14.3.0",
    "chalk": "^1.1.3",
    "chokidar-cli": "^1.2.0",
    "csso-cli": "^1.0.0",
    "eslint": "^3.19.0",
    "exorcist": "^0.4.0",
    "fs-extra": "^3.0.0",
    "htmlhint": "^0.9.13",
    "husky": "^0.13.3",
    "jstransformer-markdown-it": "^2.0.0",
    "minimist": "^1.2.0",
    "node-sass": "^4.5.2",
    "pinkie-promise": "^2.0.1",
    "postcss-cli": "^3.2.0",
    "pug": "^2.0.0-beta.12",
    "stylelint": "^7.10.1",
    "stylus": "^0.54.5",
    "uglify-js": "^2.8.22",
    "watchify": "^3.9.0"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:thezimmee/bones.git"
  },
  "keywords": [
    "static, site, generator, front, end, css, framework"
  ]
}
